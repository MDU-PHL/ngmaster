# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    tags:
      - v*
    branches:
      - 'master'
      - 'main'
    paths:
      - '**.py'
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      tags:
        description: "Testing workflow"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      # checkout the repository
      - name: Checkout current code
        uses: actions/checkout@v4

      # Set up conda with mamba (using miniforge3)
      - name: Set up Conda with Mamba
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3
          miniforge-version: latest
          use-mamba: true
          activate-environment: test
          python-version: ${{ matrix.python-version }}

      
      # Create conda environment using mamba
      - name: Create Conda environment with mlst
        shell: bash -el {0}
        run: |
          mamba create -n ngmaster -c bioconda mlst
          conda activate ngmaster
          mlst --version
          # install flake8 for linting
          conda install -y flake8
        
      # Install the current package
      - name: Install the current package
        shell: bash -el {0}
        run: |
          conda activate ngmaster
          pip install .
          echo "MLST version:"
          mlst --version
          echo "MLST path:"
          which mlst
          ls -la $(dirname $(which mlst))/../db/ || echo "No db directory found"
          echo "Installed package version:"
          ngmaster --version
        
      # test the package
      - name: Test the package
        shell: bash -l {0}
        run: |
            set -euo pipefail
            conda activate ngmaster
            ngmaster --test
      
      # lint with flake8
      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          conda activate ngmaster
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics 

  build-n-publish:
      name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
      needs: test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - name: Set up Python 3.7
          uses: actions/setup-python@v1
          with:
            python-version: 3.7
        - name: Install pypa/build
          run: >-
            python -m
            pip install
            build
            --user
        - name: Build a binary wheel and a source tarball
          run: >-
            python -m
            build
            --sdist
            --wheel
            --outdir dist/
            .
        - name: Publish distribution 📦 to Test PyPI
          uses: pypa/gh-action-pypi-publish@master
          with:
            user: __token__
            password: ${{ secrets.test_pypi_password }}
            repository_url: https://test.pypi.org/legacy/
            skip_existing: true
